[[_git_aliases]]
=== Bí Danh(Alias) Trong Git

(((aliases)))

Trước khi kết thúc chương Cơ bản về Git, hãy thử một tip nhỏ để trải nghiệm Git đơn giản hơn, dễ hơn và thân thiện hơn: bí danh (alias).
Không bắt buộc bạn phải sử dụng chúng, nhưng có lẽ nên biết dùng chúng như thế nào.

Git không thể phỏng đoán ra câu lệnh nếu như bạn chỉ gõ một phần của câu lệnh đó. 
Nếu bạn không muốn gõ toàn bộ từng câu lệnh, bạn có thể dễ dàng cài đặt một bí danh (alias) cho mỗi lệnh sử dụng `git config`. (((git commands, config)))
Sau đây là một số ví dụ có thể hữu ích cho bạn:


[source,console]
----
$ git config --global alias.co checkout
$ git config --global alias.br branch
$ git config --global alias.ci commit
$ git config --global alias.st status
----

Có nghĩa là, ví dụ, thay vì phải gõ `git commit`, bạn chỉ cần gõ `git ci`. 
Khi bạn bắt đầu sử dụng Git, chắc chắn bạn sẽ sử dụng cả các câu lệnh khác một cách thường xuyên; trong trường hợp này, đừng ngần ngại tạo thêm các bí danh mới. 

Kỹ thuật này cũng có thể rất hữu ích trong việc tạo mới các câu lệnh mà bạn cho rằng sự tồn tại của chúng là cần thiết.
Ví dụ như, để làm chính xác các vấn đề liên quan đến tính khả dụng mà bạn gặp phải khi bỏ tổ chức (unstaging) một tập tin, bạn có thể tự tạo bí danh riêng cho việc này:

[source,console]
----
$ git config --global alias.unstage 'reset HEAD --'
----

Lệnh này tương đương với hai câu lệnh sau:

[source,console]
----
$ git unstage fileA
$ git reset HEAD fileA
----

Theo cách này thì nhìn có vẻ rõ ràng hơn.
Một bí danh phổ biến khác là lệnh `last`, như sau:

[source,console]
----
$ git config --global alias.last 'log -1 HEAD'
----

Với cách này, bạn có thể xem được commit cuối cùng một cách dễ dàng:

[source,console]
----
$ git last
commit 66938dae3329c7aebe598c2246a8e6af90d04646
Author: Josh Goebel <dreamer3@example.com>
Date:   Tue Aug 26 19:48:51 2008 +0800

    test for current head

    Signed-off-by: Scott Chacon <schacon@example.com>
----

Bạn cũng có thể tự nhận thấy rằng, Git thay thế lệnh mới với bất cứ tên gì bạn đặt cho nó.
Tuy nhiên, cũng có thể bạn muốn chạy một lệnh bên ngoài, hơn là bản thân các lệnh trong Git.
Trong trường hợp này, bạn bắt đầu lệnh đó với ký tự `!`. 
Nó khá hữu ích trong trường hợp bạn viết công cụ riêng của bạn để làm việc với Git.
Một ví dụ minh họa là việc tạo bí danh cho `git visual` để chạy `gitk`: 


[source,console]
----
$ git config --global alias.visual '!gitk'
----
